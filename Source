local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false


--AIMBOT SETTINGS

getgenv().AimbotEnabled = false
getgenv().TeamCheck = true
getgenv().AimPart = "Head"
getgenv().Sensitivity = 0

--FOV CIRCLE SETTINGS

getgenv().CircleSides = 15
getgenv().CircleColor = Color3.fromRGB(255, 255, 255)
getgenv().CircleTransparency = 1
getgenv().CircleRadius = 80
getgenv().CircleFilled = false
getgenv().CircleVisible = false
getgenv().CircleThickness = 0

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.y / 2)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = getgenv().CircleRadius
    local Target = nil

    for _, v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Name then
            if getgenv().TeamCheck == true then
                if v.Team ~= LocalPlayer.Team then
                    if v.Character ~= nil then
                        if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                            if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                                if VectorDistance < MaximumDistance then
                                    Target = v
                                end
                            end
                        end
                    end
                end
            else
                if v.Character ~= nil then
                    if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
    return Target
end

UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton1 then
    Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton1 then
    Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    FOVCircle.Radius = getgenv().CircleRadius
    FOVCircle.Filled = getgenv().CircleFilled
    FOVCircle.Color = getgenv().CircleColor
    FOVCircle.Visible = getgenv().CircleVisible
    FOVCircle.Radius = getgenv().CircleRadius
    FOVCircle.Transparency = getgenv().CircleTransparency
    FOVCircle.NumSides = getgenv().CircleSides
    FOVCircle.Thickness = getgenv().CircleThickness

    if Holding == true and getgenv().AimbotEnabled == true then
        TweenService:Create(Camera, TweenInfo.new(getgenv().Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[getgenv().AimPart].Position)}):Play()
    end
end)
